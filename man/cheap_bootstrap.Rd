% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cheap_bootstrap.R
\name{cheap_bootstrap}
\alias{cheap_bootstrap}
\title{Cheap subsampling}
\usage{
cheap_bootstrap(
  fun,
  data,
  size = NULL,
  type = "subsampling",
  b = 20,
  est_col_name = "estimate",
  par_col_names = "parameter",
  alpha = 0.05,
  parallelize = FALSE,
  cores = 1,
  keep_estimates = TRUE
)
}
\arguments{
\item{fun}{A function that returns a data.frame
in est_col_name and the corresponding parameter names in par_col_names.}

\item{data}{Data set to be used for the computation.}

\item{size}{Subsample size. Defaults to 0.632 * nrow(data).}

\item{type}{Character. Type of bootstrap method.
Can be either "subsampling" or "non_parametric".
Defaults to "subsampling".}

\item{b}{Number of bootstrap samples.}

\item{est_col_name}{Character. Column name of the point estimates.}

\item{par_col_names}{Character. Column names of the parameter names.}

\item{alpha}{Significance level. Defaults to 0.05.}

\item{parallelize}{Logical. Should the computation be parallelized?}

\item{cores}{Number of cores to be used for parallel computation.}

\item{keep_estimates}{Logical. Should the bootstrapped estimates be kept?}
}
\value{
An object of class "cheap_bootstrap" containing
the point estimates and confidence intervals.
}
\description{
Method implementing the cheap subsampling method for confidence intervals
}
\details{
Given a model object or a function that returns a vector of coefficients
and a data set,
this function computes confidence intervals using
the cheap subsampling method.
}
\examples{
utils::data(anorexia, package = "MASS")
## example with a function call
set.seed(123)
library(broom)
library(dplyr)
fun <- function(data) {
  lm(formula = Postwt ~ Prewt + Treat + offset(Prewt), data = data) \%>\%
  tidy()
}
cs <- cheap_bootstrap(fun = fun,
                      b = 20,
                      data = anorexia,
                      est_col_name = "estimate",
                      par_col_names = "term")
cs
summary(cs)
plot(cs)

## example with a function call and parallel computation
\dontrun{
set.seed(123)
## note the function needs to load the packages needed
## for the computation if parallelized
cs <- cheap_bootstrap(fun = fun,
                      b = 20,
                      data = anorexia,
                      est_col_name = "estimate",
                      par_col_names = "term",
                      parallelize = TRUE,
                      cores = 2)
}
}
